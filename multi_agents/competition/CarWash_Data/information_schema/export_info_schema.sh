#!/bin/bash

# Information Schema Export Script
# This script connects once to MySQL and exports all information_schema tables to separate CSV files

echo "Starting information_schema database export..."

# Create the SQL commands file for information_schema
cat > export_info_schema.sql << 'EOF'
-- Set CSV output format
SET SESSION sql_mode = '';

-- Export each table with clear separators
SELECT 'TABLE_START:ADMINISTRABLE_ROLE_AUTHORIZATIONS' as marker;
SELECT * FROM ADMINISTRABLE_ROLE_AUTHORIZATIONS;
SELECT 'TABLE_END:ADMINISTRABLE_ROLE_AUTHORIZATIONS' as marker;

SELECT 'TABLE_START:APPLICABLE_ROLES' as marker;
SELECT * FROM APPLICABLE_ROLES;
SELECT 'TABLE_END:APPLICABLE_ROLES' as marker;

SELECT 'TABLE_START:CHARACTER_SETS' as marker;
SELECT * FROM CHARACTER_SETS;
SELECT 'TABLE_END:CHARACTER_SETS' as marker;

SELECT 'TABLE_START:CHECK_CONSTRAINTS' as marker;
SELECT * FROM CHECK_CONSTRAINTS;
SELECT 'TABLE_END:CHECK_CONSTRAINTS' as marker;

SELECT 'TABLE_START:COLLATIONS' as marker;
SELECT * FROM COLLATIONS;
SELECT 'TABLE_END:COLLATIONS' as marker;

SELECT 'TABLE_START:COLLATION_CHARACTER_SET_APPLICABILITY' as marker;
SELECT * FROM COLLATION_CHARACTER_SET_APPLICABILITY;
SELECT 'TABLE_END:COLLATION_CHARACTER_SET_APPLICABILITY' as marker;

SELECT 'TABLE_START:COLUMNS' as marker;
SELECT * FROM COLUMNS;
SELECT 'TABLE_END:COLUMNS' as marker;

SELECT 'TABLE_START:COLUMNS_EXTENSIONS' as marker;
SELECT * FROM COLUMNS_EXTENSIONS;
SELECT 'TABLE_END:COLUMNS_EXTENSIONS' as marker;

SELECT 'TABLE_START:COLUMN_PRIVILEGES' as marker;
SELECT * FROM COLUMN_PRIVILEGES;
SELECT 'TABLE_END:COLUMN_PRIVILEGES' as marker;

SELECT 'TABLE_START:COLUMN_STATISTICS' as marker;
SELECT * FROM COLUMN_STATISTICS;
SELECT 'TABLE_END:COLUMN_STATISTICS' as marker;

SELECT 'TABLE_START:ENABLED_ROLES' as marker;
SELECT * FROM ENABLED_ROLES;
SELECT 'TABLE_END:ENABLED_ROLES' as marker;

SELECT 'TABLE_START:ENGINES' as marker;
SELECT * FROM ENGINES;
SELECT 'TABLE_END:ENGINES' as marker;

SELECT 'TABLE_START:EVENTS' as marker;
SELECT * FROM EVENTS;
SELECT 'TABLE_END:EVENTS' as marker;

SELECT 'TABLE_START:FILES' as marker;
SELECT * FROM FILES;
SELECT 'TABLE_END:FILES' as marker;

SELECT 'TABLE_START:INNODB_BUFFER_PAGE' as marker;
SELECT * FROM INNODB_BUFFER_PAGE;
SELECT 'TABLE_END:INNODB_BUFFER_PAGE' as marker;

SELECT 'TABLE_START:INNODB_BUFFER_PAGE_LRU' as marker;
SELECT * FROM INNODB_BUFFER_PAGE_LRU;
SELECT 'TABLE_END:INNODB_BUFFER_PAGE_LRU' as marker;

SELECT 'TABLE_START:INNODB_BUFFER_POOL_STATS' as marker;
SELECT * FROM INNODB_BUFFER_POOL_STATS;
SELECT 'TABLE_END:INNODB_BUFFER_POOL_STATS' as marker;

SELECT 'TABLE_START:INNODB_CACHED_INDEXES' as marker;
SELECT * FROM INNODB_CACHED_INDEXES;
SELECT 'TABLE_END:INNODB_CACHED_INDEXES' as marker;

SELECT 'TABLE_START:INNODB_CMP' as marker;
SELECT * FROM INNODB_CMP;
SELECT 'TABLE_END:INNODB_CMP' as marker;

SELECT 'TABLE_START:INNODB_CMPMEM' as marker;
SELECT * FROM INNODB_CMPMEM;
SELECT 'TABLE_END:INNODB_CMPMEM' as marker;

SELECT 'TABLE_START:INNODB_CMPMEM_RESET' as marker;
SELECT * FROM INNODB_CMPMEM_RESET;
SELECT 'TABLE_END:INNODB_CMPMEM_RESET' as marker;

SELECT 'TABLE_START:INNODB_CMP_PER_INDEX' as marker;
SELECT * FROM INNODB_CMP_PER_INDEX;
SELECT 'TABLE_END:INNODB_CMP_PER_INDEX' as marker;

SELECT 'TABLE_START:INNODB_CMP_PER_INDEX_RESET' as marker;
SELECT * FROM INNODB_CMP_PER_INDEX_RESET;
SELECT 'TABLE_END:INNODB_CMP_PER_INDEX_RESET' as marker;

SELECT 'TABLE_START:INNODB_CMP_RESET' as marker;
SELECT * FROM INNODB_CMP_RESET;
SELECT 'TABLE_END:INNODB_CMP_RESET' as marker;

SELECT 'TABLE_START:INNODB_COLUMNS' as marker;
SELECT * FROM INNODB_COLUMNS;
SELECT 'TABLE_END:INNODB_COLUMNS' as marker;

SELECT 'TABLE_START:INNODB_DATAFILES' as marker;
SELECT * FROM INNODB_DATAFILES;
SELECT 'TABLE_END:INNODB_DATAFILES' as marker;

SELECT 'TABLE_START:INNODB_FIELDS' as marker;
SELECT * FROM INNODB_FIELDS;
SELECT 'TABLE_END:INNODB_FIELDS' as marker;

SELECT 'TABLE_START:INNODB_FOREIGN' as marker;
SELECT * FROM INNODB_FOREIGN;
SELECT 'TABLE_END:INNODB_FOREIGN' as marker;

SELECT 'TABLE_START:INNODB_FOREIGN_COLS' as marker;
SELECT * FROM INNODB_FOREIGN_COLS;
SELECT 'TABLE_END:INNODB_FOREIGN_COLS' as marker;

SELECT 'TABLE_START:INNODB_FT_BEING_DELETED' as marker;
SELECT * FROM INNODB_FT_BEING_DELETED;
SELECT 'TABLE_END:INNODB_FT_BEING_DELETED' as marker;

SELECT 'TABLE_START:INNODB_FT_CONFIG' as marker;
SELECT * FROM INNODB_FT_CONFIG;
SELECT 'TABLE_END:INNODB_FT_CONFIG' as marker;

SELECT 'TABLE_START:INNODB_FT_DEFAULT_STOPWORD' as marker;
SELECT * FROM INNODB_FT_DEFAULT_STOPWORD;
SELECT 'TABLE_END:INNODB_FT_DEFAULT_STOPWORD' as marker;

SELECT 'TABLE_START:INNODB_FT_DELETED' as marker;
SELECT * FROM INNODB_FT_DELETED;
SELECT 'TABLE_END:INNODB_FT_DELETED' as marker;

SELECT 'TABLE_START:INNODB_FT_INDEX_CACHE' as marker;
SELECT * FROM INNODB_FT_INDEX_CACHE;
SELECT 'TABLE_END:INNODB_FT_INDEX_CACHE' as marker;

SELECT 'TABLE_START:INNODB_FT_INDEX_TABLE' as marker;
SELECT * FROM INNODB_FT_INDEX_TABLE;
SELECT 'TABLE_END:INNODB_FT_INDEX_TABLE' as marker;

SELECT 'TABLE_START:INNODB_INDEXES' as marker;
SELECT * FROM INNODB_INDEXES;
SELECT 'TABLE_END:INNODB_INDEXES' as marker;

SELECT 'TABLE_START:INNODB_METRICS' as marker;
SELECT * FROM INNODB_METRICS;
SELECT 'TABLE_END:INNODB_METRICS' as marker;

SELECT 'TABLE_START:INNODB_SESSION_TEMP_TABLESPACES' as marker;
SELECT * FROM INNODB_SESSION_TEMP_TABLESPACES;
SELECT 'TABLE_END:INNODB_SESSION_TEMP_TABLESPACES' as marker;

SELECT 'TABLE_START:INNODB_TABLES' as marker;
SELECT * FROM INNODB_TABLES;
SELECT 'TABLE_END:INNODB_TABLES' as marker;

SELECT 'TABLE_START:INNODB_TABLESPACES' as marker;
SELECT * FROM INNODB_TABLESPACES;
SELECT 'TABLE_END:INNODB_TABLESPACES' as marker;

SELECT 'TABLE_START:INNODB_TABLESPACES_BRIEF' as marker;
SELECT * FROM INNODB_TABLESPACES_BRIEF;
SELECT 'TABLE_END:INNODB_TABLESPACES_BRIEF' as marker;

SELECT 'TABLE_START:INNODB_TABLESTATS' as marker;
SELECT * FROM INNODB_TABLESTATS;
SELECT 'TABLE_END:INNODB_TABLESTATS' as marker;

SELECT 'TABLE_START:INNODB_TEMP_TABLE_INFO' as marker;
SELECT * FROM INNODB_TEMP_TABLE_INFO;
SELECT 'TABLE_END:INNODB_TEMP_TABLE_INFO' as marker;

SELECT 'TABLE_START:INNODB_TRX' as marker;
SELECT * FROM INNODB_TRX;
SELECT 'TABLE_END:INNODB_TRX' as marker;

SELECT 'TABLE_START:INNODB_VIRTUAL' as marker;
SELECT * FROM INNODB_VIRTUAL;
SELECT 'TABLE_END:INNODB_VIRTUAL' as marker;

SELECT 'TABLE_START:KEYWORDS' as marker;
SELECT * FROM KEYWORDS;
SELECT 'TABLE_END:KEYWORDS' as marker;

SELECT 'TABLE_START:KEY_COLUMN_USAGE' as marker;
SELECT * FROM KEY_COLUMN_USAGE;
SELECT 'TABLE_END:KEY_COLUMN_USAGE' as marker;

SELECT 'TABLE_START:OPTIMIZER_TRACE' as marker;
SELECT * FROM OPTIMIZER_TRACE;
SELECT 'TABLE_END:OPTIMIZER_TRACE' as marker;

SELECT 'TABLE_START:PARAMETERS' as marker;
SELECT * FROM PARAMETERS;
SELECT 'TABLE_END:PARAMETERS' as marker;

SELECT 'TABLE_START:PARTITIONS' as marker;
SELECT * FROM PARTITIONS;
SELECT 'TABLE_END:PARTITIONS' as marker;

SELECT 'TABLE_START:PLUGINS' as marker;
SELECT * FROM PLUGINS;
SELECT 'TABLE_END:PLUGINS' as marker;

SELECT 'TABLE_START:PROCESSLIST' as marker;
SELECT * FROM PROCESSLIST;
SELECT 'TABLE_END:PROCESSLIST' as marker;

SELECT 'TABLE_START:PROFILING' as marker;
SELECT * FROM PROFILING;
SELECT 'TABLE_END:PROFILING' as marker;

SELECT 'TABLE_START:REFERENTIAL_CONSTRAINTS' as marker;
SELECT * FROM REFERENTIAL_CONSTRAINTS;
SELECT 'TABLE_END:REFERENTIAL_CONSTRAINTS' as marker;

SELECT 'TABLE_START:RESOURCE_GROUPS' as marker;
SELECT * FROM RESOURCE_GROUPS;
SELECT 'TABLE_END:RESOURCE_GROUPS' as marker;

SELECT 'TABLE_START:ROLE_COLUMN_GRANTS' as marker;
SELECT * FROM ROLE_COLUMN_GRANTS;
SELECT 'TABLE_END:ROLE_COLUMN_GRANTS' as marker;

SELECT 'TABLE_START:ROLE_ROUTINE_GRANTS' as marker;
SELECT * FROM ROLE_ROUTINE_GRANTS;
SELECT 'TABLE_END:ROLE_ROUTINE_GRANTS' as marker;

SELECT 'TABLE_START:ROLE_TABLE_GRANTS' as marker;
SELECT * FROM ROLE_TABLE_GRANTS;
SELECT 'TABLE_END:ROLE_TABLE_GRANTS' as marker;

SELECT 'TABLE_START:ROUTINES' as marker;
SELECT * FROM ROUTINES;
SELECT 'TABLE_END:ROUTINES' as marker;

SELECT 'TABLE_START:SCHEMATA' as marker;
SELECT * FROM SCHEMATA;
SELECT 'TABLE_END:SCHEMATA' as marker;

SELECT 'TABLE_START:SCHEMATA_EXTENSIONS' as marker;
SELECT * FROM SCHEMATA_EXTENSIONS;
SELECT 'TABLE_END:SCHEMATA_EXTENSIONS' as marker;

SELECT 'TABLE_START:SCHEMA_PRIVILEGES' as marker;
SELECT * FROM SCHEMA_PRIVILEGES;
SELECT 'TABLE_END:SCHEMA_PRIVILEGES' as marker;

SELECT 'TABLE_START:STATISTICS' as marker;
SELECT * FROM STATISTICS;
SELECT 'TABLE_END:STATISTICS' as marker;

SELECT 'TABLE_START:ST_GEOMETRY_COLUMNS' as marker;
SELECT * FROM ST_GEOMETRY_COLUMNS;
SELECT 'TABLE_END:ST_GEOMETRY_COLUMNS' as marker;

SELECT 'TABLE_START:ST_SPATIAL_REFERENCE_SYSTEMS' as marker;
SELECT * FROM ST_SPATIAL_REFERENCE_SYSTEMS;
SELECT 'TABLE_END:ST_SPATIAL_REFERENCE_SYSTEMS' as marker;

SELECT 'TABLE_START:ST_UNITS_OF_MEASURE' as marker;
SELECT * FROM ST_UNITS_OF_MEASURE;
SELECT 'TABLE_END:ST_UNITS_OF_MEASURE' as marker;

SELECT 'TABLE_START:TABLES' as marker;
SELECT * FROM TABLES;
SELECT 'TABLE_END:TABLES' as marker;

SELECT 'TABLE_START:TABLESPACES_EXTENSIONS' as marker;
SELECT * FROM TABLESPACES_EXTENSIONS;
SELECT 'TABLE_END:TABLESPACES_EXTENSIONS' as marker;

SELECT 'TABLE_START:TABLES_EXTENSIONS' as marker;
SELECT * FROM TABLES_EXTENSIONS;
SELECT 'TABLE_END:TABLES_EXTENSIONS' as marker;

SELECT 'TABLE_START:TABLE_CONSTRAINTS' as marker;
SELECT * FROM TABLE_CONSTRAINTS;
SELECT 'TABLE_END:TABLE_CONSTRAINTS' as marker;

SELECT 'TABLE_START:TABLE_CONSTRAINTS_EXTENSIONS' as marker;
SELECT * FROM TABLE_CONSTRAINTS_EXTENSIONS;
SELECT 'TABLE_END:TABLE_CONSTRAINTS_EXTENSIONS' as marker;

SELECT 'TABLE_START:TABLE_PRIVILEGES' as marker;
SELECT * FROM TABLE_PRIVILEGES;
SELECT 'TABLE_END:TABLE_PRIVILEGES' as marker;

SELECT 'TABLE_START:TRIGGERS' as marker;
SELECT * FROM TRIGGERS;
SELECT 'TABLE_END:TRIGGERS' as marker;

SELECT 'TABLE_START:USER_ATTRIBUTES' as marker;
SELECT * FROM USER_ATTRIBUTES;
SELECT 'TABLE_END:USER_ATTRIBUTES' as marker;

SELECT 'TABLE_START:USER_PRIVILEGES' as marker;
SELECT * FROM USER_PRIVILEGES;
SELECT 'TABLE_END:USER_PRIVILEGES' as marker;

SELECT 'TABLE_START:VIEWS' as marker;
SELECT * FROM VIEWS;
SELECT 'TABLE_END:VIEWS' as marker;

SELECT 'TABLE_START:VIEW_ROUTINE_USAGE' as marker;
SELECT * FROM VIEW_ROUTINE_USAGE;
SELECT 'TABLE_END:VIEW_ROUTINE_USAGE' as marker;

SELECT 'TABLE_START:VIEW_TABLE_USAGE' as marker;
SELECT * FROM VIEW_TABLE_USAGE;
SELECT 'TABLE_END:VIEW_TABLE_USAGE' as marker;
EOF

echo "Connecting to information_schema database and exporting all 78 tables (this uses only 1 connection)..."
echo "Please enter password when prompted:"

# Export all data in one connection
mysql -h 127.0.0.1 -P 3307 -u QWS_QA -p information_schema < export_info_schema.sql > raw_info_schema_export.txt

echo "Export complete! Now splitting into individual CSV files..."

# Create subdirectory for information_schema files
mkdir -p information_schema_tables

# Split the raw export into individual CSV files
awk '
BEGIN { 
    current_file = ""
    in_table = 0
}
/^TABLE_START:/ { 
    if (current_file) close(current_file)
    gsub("TABLE_START:", "", $0)
    current_file = "information_schema_tables/" $0 ".csv"
    in_table = 1
    next
}
/^TABLE_END:/ { 
    in_table = 0
    next
}
in_table && !/^marker$/ { 
    if (current_file) print > current_file
}
' raw_info_schema_export.txt

# Clean up temporary files
rm export_info_schema.sql
rm raw_info_schema_export.txt

echo "Done! All information_schema tables exported to information_schema_tables/ directory."
echo "Files created in information_schema_tables/:"
ls -1 information_schema_tables/*.csv | head -10
echo "... and $(ls -1 information_schema_tables/*.csv | wc -l) total files"